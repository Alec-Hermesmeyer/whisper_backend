import PvStatus from './pv_status_t';
export declare class EagleError extends Error {
    private readonly _message;
    private readonly _messageStack;
    constructor(message: string, messageStack?: string[]);
    get message(): string;
    get messageStack(): string[];
    private static errorToString;
}
export declare class EagleOutOfMemoryError extends EagleError {
}
export declare class EagleIOError extends EagleError {
}
export declare class EagleInvalidArgumentError extends EagleError {
}
export declare class EagleStopIterationError extends EagleError {
}
export declare class EagleKeyError extends EagleError {
}
export declare class EagleInvalidStateError extends EagleError {
}
export declare class EagleRuntimeError extends EagleError {
}
export declare class EagleActivationError extends EagleError {
}
export declare class EagleActivationLimitReachedError extends EagleError {
}
export declare class EagleActivationThrottledError extends EagleError {
}
export declare class EagleActivationRefusedError extends EagleError {
}
export declare function pvStatusToException(pvStatus: PvStatus, errorMessage: string, messageStack?: string[]): EagleError;
//# sourceMappingURL=errors.d.ts.map